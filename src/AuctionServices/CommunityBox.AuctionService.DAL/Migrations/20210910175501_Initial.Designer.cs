// <auto-generated />
using System;
using CommunityBox.AuctionService.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CommunityBox.AuctionService.DAL.Migrations
{
    [DbContext(typeof(AuctionContext))]
    [Migration("20210910175501_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("CommunityBox.AuctionService.Domain.Entities.Auction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreationUtcDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<TimeSpan?>("Duration")
                        .HasColumnType("interval");

                    b.Property<string>("OwnerUserId")
                        .HasColumnType("text");

                    b.Property<decimal>("StartingPrice")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdateUtcDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("OwnerUserId")
                        .HasDatabaseName("OwnerUserIdIndex");

                    b.ToTable("Auctions");
                });

            modelBuilder.Entity("CommunityBox.AuctionService.Domain.Entities.Auctioneer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("AuctionId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Bet")
                        .HasColumnType("numeric");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.HasIndex("UserId")
                        .HasDatabaseName("UserIdIndex");

                    b.ToTable("Auctioneers");
                });

            modelBuilder.Entity("CommunityBox.AuctionService.Domain.Entities.Lot", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("AuctionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId")
                        .IsUnique();

                    b.ToTable("Lots");
                });

            modelBuilder.Entity("CommunityBox.AuctionService.Domain.Entities.Subscriber", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("AuctionId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.ToTable("Subscriber");
                });

            modelBuilder.Entity("CommunityBox.AuctionService.Domain.Entities.Auctioneer", b =>
                {
                    b.HasOne("CommunityBox.AuctionService.Domain.Entities.Auction", "Auction")
                        .WithMany("Auctioneers")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");
                });

            modelBuilder.Entity("CommunityBox.AuctionService.Domain.Entities.Lot", b =>
                {
                    b.HasOne("CommunityBox.AuctionService.Domain.Entities.Auction", "Auction")
                        .WithOne("Lot")
                        .HasForeignKey("CommunityBox.AuctionService.Domain.Entities.Lot", "AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");
                });

            modelBuilder.Entity("CommunityBox.AuctionService.Domain.Entities.Subscriber", b =>
                {
                    b.HasOne("CommunityBox.AuctionService.Domain.Entities.Auction", "Auction")
                        .WithMany("Subscribers")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");
                });

            modelBuilder.Entity("CommunityBox.AuctionService.Domain.Entities.Auction", b =>
                {
                    b.Navigation("Auctioneers");

                    b.Navigation("Lot");

                    b.Navigation("Subscribers");
                });
#pragma warning restore 612, 618
        }
    }
}
